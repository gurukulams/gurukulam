---
title: 'Introduction to Input and Output Functions in C'
date: 2018-11-14T19:02:50-07:00
draft: false
---

<div class="slides">
  
    <!-- slide 1 content -->
    <section data-auto-animate data-transition="convex">
        <img src="https://electricalworkbook.com/wp-content/uploads/2018/08/c_input_output1.png">
    </section>

    <!-- slide 2 content -->
    <section data-auto-animate data-transition="convex">
        <h3>Introduction to Input and Output Functions in c</h3>
    </section>

    <!-- slide 3 content -->
    <section data-auto-animate data-transition="convex">
        <p></p>
        <ul>
            <li>There are three essential functions of a computer.</li>
            <li>They are reading the data, processing the data entered and writing data.</li>
            <li>Majority of the programs take data as input, and then after processing the processed data is being
                displayed which is called information.</li>
            <li>In C programming you can use scanf() and printf() predefined function to read and print data.</li>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Types of Input and Output Functions</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li>There are Two Types on Input and Output Functions in the C Language.</li>
            <li>They are Listed below:-</li>
            <ul>
                <li>1. Console I/O function</li>
                <li>2. File I/O function</li>
            </ul>
            <li><u><b>Console I/O Function:-</b></li>
            <ul>
                <li>Functions to receive input from keyboard and write output to screen.</li>
            </ul>
            <li><u><b>File I/O Function:-</b></li>
            <ul>
                <li>Functions to perform input and output operations on a disk.</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>CONSOLE INPUT OUTPUT FUNCTIONS</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li> Console Input Output Functions are also included in the user program by using the header file
                &lt;stdio.h&gt; which stands for standard input-output.</li>
            <li>The Keyboard and screen together is called Console, through that the inputs and outputs are get.
            </li>
            <li>Those are called console input and output.</li>
            <li>There are major two types of Console Input Output Functions in the C language.</li>
            <ul>
                <li>1. Formatted input/output functions</li>
                <li>2. Character input/output functions</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Types of Console I/O function</b></c>
        </p>
        <img
            src="http://1.bp.blogspot.com/-t798dhAIaRU/TrGSudAzTjI/AAAAAAAAAHw/RLfO_g-FkTw/s1600/Console+I+O+Functions+in+C+programming+language.bmp">
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Let see about Formatted I/O function</b></c>
        </p>
        <img src="http://www.trytoprogram.com/images/c-formatted-input-output-function.jpg">
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Formatted I/O function</b></c>
        </p>
        <ul>
            <li>Formatted Input and Output functions which refers to an Input or Ouput data that has been arranged
                in a particular format.</li>
            <li>There are mainly two formatted I/O functions discussed as follows:</li>
            <ul>
                <li>1. scanf()</li>
                <li>2. printf()</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Scanf() function</b></c>
        </p>
        <ul>
            <li>scanf( ) is the standard library function that is used for precise input formatting.</li>
            <li>Three Main Formatting Options of Scanf() Function. They are:-</li>
            <ul>
                <li>Inputting certain characters from input.</li>
                <li>Inputting all types of data.</li>
                <li>Skipping certain characters from input.</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li><b><u>Syntax:-</b></li>
            <ul>
                <li>scanf("format string", &variable1,&variable2,&variable3,...&variablen);</li>
            </ul>
            <li>Here, “format string” is the control string which represents the format specification, the symbol &
                (ampersand) which represents the memory address where the variable value is to be stored.</li>
            <li><b><u>For-Example:-</b></li>
        </ul>
        <pre>
                    <code data-trim data-noescape>
                        1. scanf("%d%d", &r,&bs); //read int variables .
                        2. scanf("%f", &a,); //read float variables.
                        3. scanf("%c", &student); //read value Char value.
                        4. scanf("%s", str); //read value String value.
                    </code>
                </pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Example Program</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Example Program for scanf()</b></c>
        </p>
        <pre>
<code data-trim data-noescape>
#include&lt;stdio.h&gt;
void main()
{
int var1 = 73;
float var2 = 3.7;
scanf("%d %f", &var1, &var2);
}
</code>
</pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Print() function</b></c>
        </p>
        <ul>
            <li>printf() is the standard library function that is used for precise output formatting.</li>
            <li>Three Main Formatting Options of Printf() Function. They are:-</li>
            <ul>
                <li>Inserting literal characters.</li>
                <li>Displaying all types of data with appropriate size and precisions</li>
                <li>Right and left justification.</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li><b><u>Syntax:-</b></li>
            <ul>
                <li>printf("format string", variable1,variable2,variable3,...variablen);</li>
            </ul>
            <li>Here, format string represent the plain string or text which displayed in the output. And
                variable1,variable2,variable3,…variablen are variables whose values are to be displayed in the
                monitor.</li>
            <li><b><u>For-Example:-</b></li>
        </ul>
        <pre>
                    <code data-trim data-noescape>
                        1.printf("%d", a); // print value of int variables a.
                        2. printf("%f", x); // print value of float variables x. 
                        3. printf("%c",s); // print character of s.
                    </code>
                </pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Example Program for printf()</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Example Program</b></c>
        </p>
        <pre>
<code data-trim data-noescape>
#include&lt;stdio.h&gt;
int main ()
{
  int num = 22;
  printf("\nNumber: %d", num);

  return 0;
}
</code>
</pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Unformatted Console I/O Functions</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li> These Functions are deal with a single character and deal with a string of characters.</li>
            <li>There are mainly Seven unformatted I/O functions. They are:-</li>
            <ol>
                <li>getchar()</li>
                <li>putchar()</li>
                <li>getch()</li>
                <li>putch()</li>
                <li>gets()</li>
                <li>puts()</li>
                <li>getche()</li>
            </ol>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>getchar() Function</b></c>
        </p>
        <ul>
            <li>This function is used to read a single character. It is an unformatted input function.</li>
            <li>Its is found in the header file &lt;stdio.h&gt;</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>variable = getchar();</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char S;</li>
                <li>S = getchar();</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>putchar() Function</b></c>
        </p>
        <ul>
            <li>This function is used to print a single character. It is an unformatted output function.</li>
            <li>Its prototype is available in the header file &lt;stdio.h&gt;</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>putchar(variable);</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char S;</li>
                <li>S = getchar();</li>
                <li>putchar(s);</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>getch() Function</b></c>
        </p>
        <ul>
            <li>This function is used to read an unformatted input funtion.</li>
            <li>Its prototype is found in the header file &lt;conio.h&gt;</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>variable = getch();</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char S;</li>
                <li>S = getch();</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>putch() Function</b></c>
        </p>
        <ul>
            <li>This function is used to print a single character. It is an unformatted output function.</li>
            <li>Its prototype is available in the header file &lt;stdio.h&gt;</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>putch(variable);</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char n;</li>
                <li>n=getch();</li>
                <li>putch(n);</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>gets() Function</b></c>
        </p>
        <ul>
            <li>gets() Function is used to read a string.</li>
            <li>gets() is needed because scanf() discards the remaining string after a blank space where as gets()
                is useful for inputting multiple lines statements.</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>char array-variable;</li>
                <li>gets(array-variable);</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char name[20]; , gets(name);</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>puts() Function</b></c>
        </p>
        <ul>
            <li>puts() function is used to print the whole string including blank spaces.</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li>puts(array-variable);</li>
                <li>puts(str);</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>puts("Enter the Name");</li>
                <li>puts(name);</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>getche() Function</b></c>
        </p>
        <ul>
            <li>This function is also used to read a single character. It is also an unformatted input function.
            </li>
            <li>Its is found in the header file &lt;conio.h&gt;</li>
            <li><u><b>Syntax :-</b></li>
            <ul>
                <li> variable = getche();</li>
            </ul>
            <li><u><b>Example:-</b></li>
            <ul>
                <li>char S;</li>
                <li>S = getche();</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content  -->
    <section data-auto-animate data-transition="zoom">
        <img
            src="https://bookliterati.com/wp-content/uploads/2018/09/1060073-thank-you-wallpaper-1920x1080-samsung.jpg">
    </section>

</div>