---
title: 'Structures'
date: 2018-11-14T19:02:50-07:00
draft: false
---

<div class="slides">
    <!-- slide 1 content -->

    <section data-auto-animate data-transition="convex">
        <img
            src="https://2.bp.blogspot.com/-JxEZT5ikF14/XeFVCc09DEI/AAAAAAAABDE/DaNghMnunhQCOGcOA5xxAF9KtfK6iDV0QCK4BGAYYCw/s320/Structure%2BLOGO.jpeg">
    </section>

    <!-- slide 2 content -->
    <section data-auto-animate data-transition="convex">
        <h3>Structures</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="convex">
        <p>What is Structures..?</p>
        <ul>
            <li>Structure is a user-defined datatype in C language which allows us to combine data of different
                types together.</li>
            <li>Structure helps to construct a complex data type which is more meaningful.</li>
            <li>It is somewhat similar to an Array, but an array holds data of similar type only.</li>
            <li>But structure on the other hand, can store data of any type, which is practical more useful.</li>

    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li>Structures are used to represent a record.</li>
            <li>Suppose you want to keep track of your books in a library.</li>
            <li>If You want to track the following attributes about each book âˆ’</li>
            <ul>
                <li>Title</li>
                <li>Author</li>
                <li>Subject</li>
                <li>Book ID</li>
            </ul>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Defining a Structures</h3>
    </section>


    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li>struct keyword is used to define a structure. struct defines a new data type which is a collection
                of primary and derived datatypes.</li>
        </ul>
        <pre>
            <code data-trim data-noescape>
struct [structure_tag]
{
//member variable 1
//member variable 2
//member variable 3
...
}[structure_variables];
            </code>
        </pre>
        <ul>
            <li>The structure tag is optional and each member definition is a normal variable definition,such as
                int-a;
                or any other valid variable definition.</li>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <ul>
            <li>At the end of the structure's definition, before the final semicolon, you can specify one or more
                structure variables but it is optional. </li>
        </ul>
        <p>
            <c><u>For-Example:-</c>
        </p>
        <pre>
<code data-trim data-noescape>
struct Student
{
char std_name[25];
int age;
char city[10];
char class[10];
char gender;
};
</code>
</pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Declaring a Structure</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <u><b>How to Declare a Structure.?</b>
        </p>
        <ul>
            <li>It is possible to declare variables of a structure, either along with structure definition or after
                the structure is defined.</li>
            <li>Structure variable declaration is similar to the declaration of any normal variable of any other
                datatype.</li>
        </ul>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>For-Example:-</b></c>
        </p>
        <pre>
            <code data-trim data-noescape>
                struct Student
                {
                    char std_name[25];
                    int age;    
                    char city[10];
                    char class[10];
                    char gender;
                };
                struct Student S1, S2; //declaring variables of struct Student
            </code>
        </pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Structure Intialization</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Intialization of Structure</b></c>
        </p>
        <pre>
<code data-trim data-noescape>
    struct Student
    {
        char std_name[25];
        int age;    
        char city[10];
        char class[10];
        char gender;
    };
    struct Student S1={"Sai",10,"Trichy","Fifth_Std", 'M' }; //Intialization
</code>   
</pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <u>
                <c>Another Way of Intialize a Structure:-</c>
            
        </p>
        <pre>
<code data-trim data-noescape>
    struct Student S1;
    S1.name=Sai;
    S1.age=10
    S1.city=Trichy
    S1.class=Fifth_Std
    S1.gender=M
</code>
</pre>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <h3>Example Program</h3>
    </section>

    <!-- slide 5 content -->
    <section data-auto-animate data-transition="zoom">
        <p>
            <c><u><b>Example Program</b></c>
        </p>
        <pre>
<code data-trim data-noescape>
    #include&lt;stdio.h&gt;
    struct StudentData{
        char *stu_name;
        int stu_id;
        int stu_age;
    };
    int main()
    {
         /* student is the variable of structure StudentData*/
         struct StudentData student;
    
         /*Assigning the values of each struct member here*/
         student.stu_name = "Steve";
         student.stu_id = 1234;
         student.stu_age = 30;
    
         /* Displaying the values of struct members */
         printf("Student Name is: %s", student.stu_name);
         printf("\nStudent Id is: %d", student.stu_id);
         printf("\nStudent Age is: %d", student.stu_age);
         return 0;
    }
</code>
</pre>
    </section>

    <!-- slide 5 content  -->
    <section data-auto-animate data-transition="zoom">
        <img src="https://swall.teahub.io/photos/small/31-311225_thank-you-text-hd-wallpaper-thank-you.jpg">
    </section>

</div>