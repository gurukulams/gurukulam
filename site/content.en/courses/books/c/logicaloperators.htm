---
title: 'USE OF LOGICAL OPERATORS'
date: 2018-11-14T19:02:50-07:00
draft: false
---

<div class="slides">
    
    <!--slide 1-->
    <section>
        <h3>Use Of Logical Operators</h3>
    </section>

    <!--slide 2-->
    <section>
        <h4>LOGICAL OPERATOR IN C</h4>
        <ul>
            <li>LOGICAL OPERATOR IN C</li>
            <br>
            <li>They are:-</li>
            <ul>
                <li>&& (AND)</li>
                <li>|| (OR)</li>
                <li>! (NOT)</li>
            </ul>
        </ul>
    </section>

    <!--slide 3-->
    <section>
        <h3>WHAT IS LOGICAL OPERATOR ?</h3>
        <ul>
            <li>It perform logical operations on the given 
                expressions</li>
            <br>
            <li>It allow a program to make a decision based on 
                multiple conditions</li>
            <br>
            <li>Each operand is considered a condition that can 
                be evaluated to a true or false value.</li>
        </ul>
    </section>

    <!--slide 4-->
    <section>
        <h3>THE THREE LOGICAL OPERATORS ARE:-</h3>
        <ul>
            <li>AND-&& :-</li>
            
              <p>  
              <small>
                THE ‘&&’ OPERATOR RETURNS TRUE WHEN BOTH THE CONDITIONS ARE SATISFIED. OTHERWISE, IT 
                RETURNS FALSE.
              </small>
              </p>
        </ul>
        <img src="#" alt="apple img"> <img src="#" alt="mango img">
    </section>

    <!--slide 5-->
    <section>
        <ul>
            <li>OR-|| :-</li>
            <p>
                <small>
                THE ‘||’ OPERATOR RETURNS TRUE EVEN IF ONE (OR BOTH) OF THE CONDITIONS IS SATISFIED. 
                OTHERWISE IT RETURNS FALSE.
                </small>
            </p>
            <li>NOT-!:-</li>
            <p>
                <small>
                THE ‘!’ OPERATOR RETURNS TRUE THE CONDITION IS NOT SATISFIED. OTHERWISE IT RETURNS FALSE.
                </small>
            </p>
        </ul>
        <img src="#" alt="dog img">
    </section>

    <!--slide 6-->
    <section>
         <h3><u>PROGRAM TO PREPARE THE MARKSTATEMENT OF THE STUDENT</h3>
         <pre>
             <code>
                #include
                    int main()
                    {
                        int mark1,mark2,mark3,mark4,mark5,percentage;
                    
                        printf("Enter marks in five subjects");
                        scanf("%d%d%d%d%d",&mark1,&mark2,&mark3,&mark4,&mark5);
                        percentage=(mark1+mark2+mark3+mark4+mark5)*100/500;
                    
                        if(percentage>=60)
                            printf("First division\n");
                        else
                        {
                            if(percentage>=50)
                                printf("Second division\n");
                            else
                            {
                            if(percentage>=40)
                                printf("Third division\n");
                            else
                                printf("Fail\n");
                            }
                        }
                        return 0;
                        }
                    
              </code>
         </pre>            
    </section>
 
    <!--slide 7-->
    <section>
        <h3>IN THE ABOVE PROGRAM, THERE ARE 3 DISADVANTAGES:-</h3>
        <ol>
            <li>Number of Conditions increased, then the 
                program gets larger</li>
            <li>Difficult to match Coressponding if and else</li>
            <li>And also Difficult to match Coressponding Braces
                ({})
            </li>
        </ol>
        <p>To Overcome these Difficulties, we simplify 
            the Program using Logical Operator.</p>

    </section>

    <!--slide 8-->
    <section>
        <h3>LET'S SEE THE PROGRAM USING LOGICAL OPERATOR WHICH RECTIFIES THOSE DISADVANTAGES</h3>
    </section>

    <!--slide 9-->
    <section>
        <h3><u>DISADVANTAGES OF PREVIOUS PROGRAM</h3>
        <ul>
            <li>In the previous program also we have some 
                disadvantages.</li>
            <li>Even though, the first condition gets true and 
                gives the output too.</li>
            <li>The balance conditions (statements) are 
                still checked and executed.</li>
            <li>It increases the Time of Execution of the Program</li>
            <li>These issues are avoided using the <a href="javascript://">Else-if Clause</a>
            </li>
        </ul>
    </section>

    <!--slide 10-->
    <section>
        <h3>THE ELSE IF-CLAUSE</h3>            
    </section>

    <!--slide 11-->
    <section>
        <div>
            <h3><u>ELSE-IF CLAUSE</h3>
            <pre>
               
                if(percentage>=60)
                    printf("First division\n");
                elseif(percentage>=50)
                    printf("Second division\n");
                elseif(percentage>=40)
                    printf("Third division\n");
                else
                    printf("Fail\n");
             
            </pre>
        </div>
    </section>
    
    <!--slide 12-->
    <section>
        <h3><u>THE ! OPERATOR</h3>
        <ul>
            <li>Not Operator is the Third Operator.</li>
            <li>This Operator Reverse the Result of the 
                expression.</li>
            <li>If the expression evaluates to true, the 
                Not Operator(!) returns false.</li>
            <li>So, this Operator returns the value as vice-versa.</li>
        </ul>
    </section>

     <!--slide 13-->
     <section>
        <div>
            <h3><u>EXAMPLE:- SIMPLE PROGRAM USING NOT(!)OPERATOR</h3>
            <pre>
                #include 
                    int main()
                    {
                        int r = 37, s = 73;
                    
                        if (!(r > s))
                        {
                            printf("1 \n");
                        }
                        else
                        {
                            printf("2 \n");
                        }
                        return 0;
                    }
                    
            

            </pre>
        </div>
    </section>

     <!--slide 14-->
     <section>
         <div>
        <h3><u>EXAMPLE PROGRAM USING ALL THREE LOGICAL OPERATORS</h3>
        <pre>
            #include 

            int main()
            {
                int m = 40, n = 20;
                if (m > n && m != 0)
                {
                    printf("And Operator Performs\n");
                }
                if (n > m || m != 20)
                {
                    printf("OR Operator Performs\n");
                }
                if (!(m > n && m != 0))
                {
                    printf("NOT Operator Performs\n");
                }
                else
                {
                    printf("NOT Operator Returns False\n");
                }
            }
            
    

        </pre>
         </div>
    </section>

     <!--slide 15-->
     <section>
        <h3>HIERARCHY OF OPERATORS REVISITED</h3>
    </section>

     <!--slide 16-->
     <section>
        <img src="#" alt="grand father img"> <img src="#" alt="grant mother img">
    </section>

    <!--slide 17-->
    <section>
     <table>
       <tr>
           <th>!</th>
           <th>Logical NOT</th>
       </tr>
       <tr>
           <td>*, /, %</td>
           <td>Arithmetic and Modulus</td>
       </tr>
       <tr>
           <td>+, -</td>
           <td>Arithmetic</td>
       </tr>
       <tr>
           <td>>, >=</td>
           <td>Relational</td>
       </tr>
       <tr>
        <td>==, !=</td>
        <td>Relational</td>
    </tr>
    <tr>
        <td>&&</td>
        <td>Logical AND</td>
    </tr>
    <tr>
        <td>||</td>
        <td>Logical OR</td>
    </tr>
    <tr>
        <td>=</td>
        <td>Assignment</td>
    </tr>
     </table>
    </section>

    <!--slide 18-->
    <section>
        <h3>THE CONDITIONAL OPERATORS</h3>
    </section>

    <!--slide 19-->
    <section>
        <h3>WHAT IS CONDITIONAL OPERATOR ?</h3>
        <ul>
            <li>The Conditional Operators are ? and :</li>
            <li>The Conditional Operator, also called a Ternary 
                operator</li>
            <li>It is used in the decision-making process.</li>
            <li>It return first value if condition is true, Otherwise, 
                it returns another value, if condition is false.
            </li>
        </ul>
    </section>

    <!--slide 20-->
    <section>
        <h3><u>THE CONDITIONAL OPERATORS SYNTAX:-</h3>
          <img src="#" alt="not found">
    </section>    
    <!--slide 21-->
    <section>
    <h3><u>PROGRAM USING CONDITIONAL OPERATORS</h3>
    <div>
        <pre>
            #include 

                    int main()
                    {
                        int a, b;
                    
                        printf("Enter a & b: \n ");
                        scanf("%d%d", &a, &b);
                        (a > b)?printf("The Value of 'a' is Greater than 'b'\n") : printf("The Value of 'a' is Lesser than 'b'\n");                        
                        return 0;
                    }
            

        </pre>
    </div>
    </section>

    <!--silide 22-->
    <section>
    
        <img src="#" alt="thank you">
    </section>
  </div>