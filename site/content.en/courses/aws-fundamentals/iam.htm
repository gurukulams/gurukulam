---
title: 'IAM'
weight: 2
---

<div class="slides">
  <section data-auto-animate="" data-transition="zoom">
    <h2 class="r-fit-text">AWS IAM</h2>
  </section>
  <section data-markdown>
    <textarea data-template>
      ### AWS Identity and Access Management (IAM)
      - AWS Identity and Access Management (IAM) is a web service that enables you to manage users, groups, and permissions in AWS.
      - IAM allows you to control who can access your AWS resources and what actions they can perform.
      ---
      ### Key Features of AWS IAM
      - Centralized user management: IAM allows you to create and manage users, groups, and roles in a single place.
      - Fine-grained access control: IAM allows you to define granular permissions for each user or group based on the principle of least privilege.
      - Multi-factor authentication: IAM supports multi-factor authentication (MFA) to add an extra layer of security to user accounts.
      - Integration with AWS services: IAM integrates with various AWS services to provide access control and permissions management.
      - Audit and compliance: IAM provides audit logs to track user activity and comply with regulatory requirements.
      ---
      ### IAM Components
      - Users: IAM users are the entities that you create to represent people, applications, or services that need access to AWS resources.
      - Groups: IAM groups are a collection of users that have the same set of permissions.
      - Roles: IAM roles are similar to users, but instead of representing an individual, they represent a set of permissions that can be assumed by users or services.
      - Policies: IAM policies are JSON documents that define permissions for users, groups, and roles.
      ---
      ### IAM Access Control
      - IAM provides fine-grained access control through the use of policies.
      - Policies can be attached to users, groups, or roles to define the actions that they are allowed to perform on AWS resources.
      - IAM policies are based on the principle of least privilege, which means that users are granted only the permissions they need to perform their job functions.
      ---
      ### IAM Best Practices
      - Use multi-factor authentication (MFA) for all IAM users.
      - Grant least privilege by defining granular permissions for each user or group.
      - Use IAM roles for EC2 instances to avoid using access keys and passwords.
      - Use IAM policies to enforce password policies and enable password expiration.
      - Regularly review IAM permissions and remove unnecessary access.
      ---
      ### Conclusion
      - AWS IAM is a powerful tool for managing access to AWS resources.
      - By following IAM best practices, you can ensure that your AWS resources are secure and comply with regulatory requirements.
      - IAM provides centralized user management, fine-grained access control, and audit logs to track user activity.
    </textarea>
  </section>
</div>